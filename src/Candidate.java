
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Beyza
 */
public class Candidate extends javax.swing.JFrame {
        private String selectedParty;
        private String[] participant;
        
    public Candidate(String selectedParty) {
        this.selectedParty = selectedParty;

    }

    public String getSelectedParty() {
        return this.selectedParty;
    }

    public void setSelectedParty(String selectedParty) {
        this.selectedParty = selectedParty;
    }

    public Candidate(String[] participant) {
        this.participant = participant;
    }

    public String[] getParticipant() {
        return participant;
    }

    public void setParticipant(String[] participant) {
        this.participant = participant;
    }
    /**
     * Creates new form Candidate
     */
    public Candidate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //https://www.youtube.com/watch?v=J3N220Vizx4&list=PLzIWkToFwqHSZuhkX5NEojR7ZMWE1XQu7&index=42
     public String [] candidateList(){
        //ArrayList<Statistics> list = new ArrayList<Statistics>();
        String [] candidateArray = new String[336];
        String line = "";
        try{
        
            FileInputStream fStream = new FileInputStream("candidates.txt");
            DataInputStream dStream = new DataInputStream(fStream);
            BufferedReader bReader = new BufferedReader(new InputStreamReader(dStream));


        int i=0;
	while((line = bReader.readLine())!=null){
                candidateArray[i] = new String(line);
                i++;       

	
	}
        dStream.close(); // okuma durumunu kapatmak için
        }catch(IOException e){
            System.out.println(e.getMessage());
    }
        return candidateArray;
     }
     public String[] partyList(){
         String [] partyArray = new String[12];
         String line = "";
         try{
             FileInputStream fStream = new FileInputStream("parties.txt");
             DataInputStream dStream = new  DataInputStream(fStream);
             BufferedReader bReader = new BufferedReader (new InputStreamReader(dStream));
             
             int i = 0;
             while((line = bReader.readLine())!=null){
                 partyArray[i]  =new String (line);
                 i++;
             }
             dStream.close();
             
         }catch(IOException e){
             System.out.println(e.getMessage());
             
         }
         return partyArray;
     }
  
     public int  chosenParty(){ //seçilen partinin indeksini döndürmek için
        int index = -1;
        String [] takingParty = partyList();
        for(int i=0; i<12 ;i++){
            if(this.getSelectedParty().equals(takingParty[i])){ //seçilen partiyle listedeki parti eşitse
                
                labelSelectedParty.setText(this.getSelectedParty());
                index = i;
             
                break;
            }
            
        }
       
       return index;
}  
   //partilerinin indeksine göre adayları ayırıyor
    public  String[][] seperatingCandidates(){
        int a=0;
        String[] candiArray = new String[336];
        candiArray = candidateList();
        String[][] array = new String[12][28];
        for(int i =0 ;i<12 ;i++){
            for(int j=0;j<28;j++){
                 array[i][j] = candiArray[a];
                 a++;
                
            }
        }
        

        return array;
    }
     
     
     public void addingtoTable(){
         DefaultTableModel model=(DefaultTableModel) tableCandidate.getModel();     
        int index =chosenParty(); 
        String[][] candidateArray  = seperatingCandidates();
        String [] array = candidateList();
        String [] tableArray = new String[28];  

        Object tablerows [] = new Object[2];
         
        Vote votes = new Vote();
        votes.getVotesfromFile();
         
         for (int i=0 ;i<28; i++){
             //tablerows[0] =list.get(i).parties;
             //tablerows[1] = list.get(i).statistics;
             tablerows[0] = candidateArray[index][i];
             tablerows[1]= votes.GetCandidateStatistics(labelSelectedParty.getText(),index,  candidateArray[index][i]);
             model.addRow(tablerows);
         }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelSelectedParty = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCandidate = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Viner Hand ITC", 1, 18)); // NOI18N
        jLabel1.setText("General Election Survey Statistics");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(labelSelectedParty)
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(labelSelectedParty))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        tableCandidate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Candidate", "Statistics"
            }
        ));
        jScrollPane1.setViewportView(tableCandidate);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Candidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Candidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Candidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Candidate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        System.out.println("test");
            /* Create and display the form */
      
            
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Candidate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelSelectedParty;
    private javax.swing.JTable tableCandidate;
    // End of variables declaration//GEN-END:variables

   
}
